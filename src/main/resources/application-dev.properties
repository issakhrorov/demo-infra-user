server.port=8080

api.path=infra/api/v1/user-service

spring.datasource.url=jdbc:postgresql://localhost:5432/demo_infra_user
spring.datasource.username=issakhrorov
spring.datasource.password=1111

spring.data.jdbc.dialect=postgresql
logging.level.org.springframework.boot.autoconfigure=WARN

spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

#1 hour in milliseconds
jwt.access.token.expiration=3600000
#7 days in milliseconds
jwt.refresh.token.expiration=604800000

# Kafka
spring.kafka.bootstrap-servers=localhost:29091,localhost:29092,localhost:29093

# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

# Consumer
spring.kafka.consumer.group-id=demo_infra
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.avro.reader=true

# Properties
spring.kafka.producer.properties.schema.registry.url=http://localhost:9011
spring.kafka.consumer.properties.schema.registry.url=http://localhost:9011

# Response messages
server.error.include-message=always
server.error.include-binding-errors=always
server.tomcat.relaxed-query-chars=|,{,},[,]

# Services
app.kafka.topic.newUser=newUser

# Actuator
management.endpoints.web.base-path=/api/v1/transaction/actuator
management.endpoint.health.group.app.include=ping
management.endpoint.health.group.db.include=db
management.endpoints.web.exposure.include=health,info
